# - Find microhttpdclient
# Find the native MicroHTTPD includes and library
#
#  MICROHTTPD_INCLUDE_DIR - where to find microhttpd.h, etc.
#  MICROHTTPD_LIBRARIES   - List of libraries when using MicroHTTPD.
#  MICROHTTPD_FOUND       - True if MicroHTTPD found.

IF (MICROHTTPD_INCLUDE_DIR)
  # Already in cache, be silent
  SET(MICROHTTPD_FIND_QUIETLY TRUE)
ENDIF (MICROHTTPD_INCLUDE_DIR)

FIND_PATH(MICROHTTPD_INCLUDE_DIR microhttpd.h
  /usr/local/include/microhttpd
  /usr/include/microhttpd
)

SET(MICROHTTPD_NAMES microhttpd)
FIND_LIBRARY(MICROHTTPD_LIBRARY
  NAMES ${MICROHTTPD_NAMES}
  PATHS /usr/lib /usr/local/lib
  PATH_SUFFIXES microhttpd
)

IF (MICROHTTPD_INCLUDE_DIR AND MICROHTTPD_LIBRARY)
  SET(MICROHTTPD_FOUND TRUE)
  SET( MICROHTTPD_LIBRARIES ${MICROHTTPD_LIBRARY} )
ELSE (MICROHTTPD_INCLUDE_DIR AND MICROHTTPD_LIBRARY)
  SET(MICROHTTPD_FOUND FALSE)
  SET( MICROHTTPD_LIBRARIES )
ENDIF (MICROHTTPD_INCLUDE_DIR AND MICROHTTPD_LIBRARY)

IF (MICROHTTPD_FOUND)
  IF (NOT MICROHTTPD_FIND_QUIETLY)
    MESSAGE(STATUS "Found MicroHTTPD: ${MICROHTTPD_LIBRARY}")
  ENDIF (NOT MICROHTTPD_FIND_QUIETLY)
ELSE (MICROHTTPD_FOUND)
  IF (MICROHTTPD_FIND_REQUIRED)
    MESSAGE(STATUS "Looked for MicroHTTPD libraries named ${MICROHTTPD_NAMES}.")
    MESSAGE(FATAL_ERROR "Could NOT find MicroHTTPD library")
  ENDIF (MICROHTTPD_FIND_REQUIRED)
ENDIF (MICROHTTPD_FOUND)

MARK_AS_ADVANCED(
  MICROHTTPD_FOUND
  MICROHTTPD_LIBRARY
  MICROHTTPD_INCLUDE_DIR
  )